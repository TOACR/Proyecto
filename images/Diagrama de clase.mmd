classDiagram
    class Profesor {
        -idProfesor : int
        -nombre : string
        -apellido : string
        -email : string
        +crearGrupo() : void
        +calificarEstudiante(): void
    }

    class Estudiante {
        -idEstudiante: int
        -nombre: string
        -apellido : string
        -email: string
        +registrar(): void
        +editarPerfil(): void
        +consultarCursosDisponibles(): List<Curso>
        +consultarCursosMatriculados(): List<Curso>
    }
 
    class Curso {
        -idCurso: string
        -nombre: string
        -creditos: int
        +abrir(): void
        +cerrar(): void
    }

    class Periodo {
        -anio: int
        -nombre: string
        -activo: boolean
        +iniciarPeriodo(): void
        +finalizarPeriodo(): void
    }

    class Grupo {
        -idGrupo : int
        -idCurso : int
        -idPeriodo: int
        -idProfesor: int
        -capacidad : int
        -horario : string
        -estado : string
        +asignarProfesor() : void
        +definirHorario(): void
        +verificarCupo() : bool
    }

    class Matricula {
        -idMatricula : int
        -idEstudiante: int
        -idGrupo: int
        -fechaMatricula : date
        -estado : string  <<ej: "Matriculado","Retirado">>
        -notaFinal : float
        +matricular() : void
        +retirar() : void
    }
    
    %% Relaciones simplificadas con cardinalidades
    Curso "1" --> "*" Grupo : tiene
    Periodo "1" --> "*" Grupo : contiene
    Profesor "1" --> "0..*" Grupo : pertenece
    Estudiante "1" --> "0..*" Matricula : realiza
    Grupo "1" --> "0..*" Matricula : recibe
    Matricula "*" --> "1" Estudiante
    Matricula "*" --> "1" Grupo
    Profesor "0..*" --> "0..*" Curso : puede_impartir
